{"version":3,"sources":["Redux/Form/action-type.js","Components/ContactForm.js","Redux/Form/form-actions.js","Components/Filter.js","Components/ContactList.js","App.js","reportWebVitals.js","Redux/Form/form-reducer.js","Redux/store.js","index.js"],"names":["actionType","addName","addNumber","addContact","contactDelite","connect","state","contacts","name","number","dispatch","props","onName","e","value","target","type","payload","onNumber","onAddContact","actions","onSubmit","preventDefault","newContact","id","uuidv4","find","toLowerCase","alert","placeholder","pattern","title","required","onChange","Filter","filter","ContactList","filteredContacts","handleDelete","map","onClick","onDellContact","useState","setFilter","contact","includes","className","split","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initStateName","initStateNumber","initStateContacts","contactFormReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5866706a.chunk.js","sourcesContent":["const actionType = {\r\n  addName: 'ContactForm/Name',\r\n  addNumber: 'ContactForm/Number',\r\n  addContact: 'ContactForm/Contact',\r\n  contactDelite: 'ContactForm/ContactDelite',\r\n};\r\nexport default actionType;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../Redux/Form/form-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n//------------------------------------------------------\r\n\r\nconst ContactForm = ({\r\n  name,\r\n  number,\r\n  contacts,\r\n  onName,\r\n  onNumber,\r\n  onAddContact,\r\n}) => {\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    if (number === '') {\r\n      alert('phone number is required');\r\n      return;\r\n    }\r\n    onName('TestName');\r\n    onNumber('+380661234567');\r\n\r\n    const foundContact = contacts.find(\r\n      (newContact) => newContact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    foundContact\r\n      ? alert(`${name} is already in contacts`)\r\n      : onAddContact(newContact);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitForm}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n          onChange={onName}\r\n        />\r\n        Phone number\r\n        <input\r\n          type=\"tel\"\r\n          placeholder=\"Enter phone number\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={onNumber}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n//---------------------------------------------------------\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n    name: state.name,\r\n    number: state.number,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onName: (e) => dispatch(actions.onName(e.target?.value ?? e)),\r\n    onNumber: (e) => dispatch(actions.onNumber(e.target?.value ?? e)),\r\n    onAddContact: (value) => dispatch(actions.onAddContact(value)),\r\n  };\r\n};\r\n\r\n//---------------------------------------------------------\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import actionType from './action-type';\r\n//----------------------------------------\r\n\r\nexport const onName = (value) => ({\r\n  type: actionType.addName,\r\n  payload: value,\r\n});\r\n\r\nexport const onNumber = (value) => ({\r\n  type: actionType.addNumber,\r\n  payload: value,\r\n});\r\n\r\nexport const onAddContact = (value) => ({\r\n  type: actionType.addContact,\r\n  payload: value,\r\n});\r\nexport const onDellContact = (value) => ({\r\n  type: actionType.contactDelite,\r\n  payload: value,\r\n});\r\n","export const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find phone number by name\r\n      <input name=\"filter\" type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n","export const ContactList = ({ filteredContacts, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button type=\"button\" onClick={handleDelete} id={`deletebtn:${id}`}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport './App.scss';\nimport ContactForm from './Components/ContactForm';\nimport { Filter } from './Components/Filter';\nimport { ContactList } from './Components/ContactList';\nimport { connect } from 'react-redux';\nimport * as actions from '../src/Redux/Form/form-actions';\n\n//----------------------------------------------------------\n\nconst App = ({ contacts, onDellContact }) => {\n  const [filter, setFilter] = useState('');\n\n  const onChange = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const handleDelete = ({ target }) => {\n    const id = target.id.split(':')[1];\n    onDellContact(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"App-header\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={onChange} />\n      <ContactList\n        handleDelete={handleDelete}\n        filteredContacts={filteredContacts}\n      />\n    </div>\n  );\n};\n//----------------------------------------------------------------\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDellContact: (value) => dispatch(actions.onDellContact(value)),\n  };\n};\n\n//---------------------------------------------------------\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\n\r\n//--------------------------------------------------\r\n\r\nconst initStateName = 'BORIS';\r\nconst initStateNumber = '+38 066 123 4567';\r\nconst initStateContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n//-------------------------------------------------\r\n\r\nconst nameReducer = (state = initStateName, { type, payload }) => {\r\n  switch (type) {\r\n    case 'ContactForm/Name':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst numberReducer = (state = initStateNumber, { type, payload }) => {\r\n  switch (type) {\r\n    case 'ContactForm/Number':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst contactsReducer = (state = initStateContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case 'ContactForm/Contact':\r\n      return [...state, payload];\r\n    case 'ContactForm/ContactDelite':\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//-----------------------------------------------------\r\n\r\nexport const contactFormReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  name: nameReducer,\r\n  number: numberReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { contactFormReducer } from './Form/form-reducer';\r\n\r\nconst store = createStore(contactFormReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './Redux/store';\nimport { Provider } from 'react-redux';\n\n// console.log('S_T_O_R_E', store);\n// console.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}